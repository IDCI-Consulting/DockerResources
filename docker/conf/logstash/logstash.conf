input {
    file {
        path => "/var/log/logstash/nginx/*.access.log"
        type => "nginx_access"
    }
    file {
        path => "/var/log/logstash/nginx/*.error.log"
        type => "nginx_error"
    }
}

filter {
    if [type] == "nginx_access" {
        grok {
            match => [ "message" , "%{COMBINEDAPACHELOG}+%{GREEDYDATA:extra_fields}"]
            overwrite => [ "message" ]
        }

        mutate {
            convert => ["response", "integer"]
            convert => ["bytes", "integer"]
            convert => ["responsetime", "float"]
        }

        geoip {
            source => "clientip"
            target => "geoip"
            add_tag => [ "nginx-geoip" ]
        }

        date {
            match => [ "timestamp" , "dd/MMM/YYYY:HH:mm:ss Z" ]
            remove_field => [ "timestamp" ]
        }

        useragent {
            source => "agent"
        }
    }

    if [type] == "nginx_error" {
        grok {
            match => [ "message" , "(?<timestamp>%{YEAR}[./-]%{MONTHNUM}[./-]%{MONTHDAY}[- ]%{TIME}) \[%{LOGLEVEL:severity}\] %{POSINT:pid}#%{NUMBER}: %{GREEDYDATA:errormessage}(?:, client: (?<client>%{IP}|%{HOSTNAME}))(?:, server: %{IPORHOST:server})(?:, request: %{QS:request})?(?:, upstream: \"%{URI:upstream}\")?(?:, host: %{QS:host})?(?:, referrer: \"%{URI:referrer}\")"]
            overwrite => [ "message" ]
        }
         
        geoip {
            source => "client"
            target => "geoip"
            add_tag => [ "nginx-geoip" ]
        }
         
        date {
            match => [ "timestamp" , "YYYY/MM/dd HH:mm:ss" ]
            remove_field => [ "timestamp" ]
        }
    }
}

output {
    elasticsearch {
        hosts => "elasticsearch:9200"
    }
    
    # useful to debug
    # stdout {
    #     codec => rubydebug
    # }
}
